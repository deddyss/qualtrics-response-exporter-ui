npm install --global npm-check-updates 
npm install --global @vue/cli
vue create qualtrics-response-exporter-ui
	Vue CLI v4.5.13
	? Please pick a preset: Manually select features
	? Check the features needed for your project: Choose Vue version, Babel, TS, Router, Vuex, Linter, Unit
	? Choose a version of Vue.js that you want to start the project with 3.x
	? Use class-style component syntax? No
	? Use Babel alongside TypeScript (required for modern mode, auto-detected polyfills, transpiling JSX)? Yes
	? Use history mode for router? (Requires proper server setup for index fallback in production) No
	? Pick a linter / formatter config: Airbnb
	? Pick additional lint features: Lint on save
	? Pick a unit testing solution: Jest
	? Where do you prefer placing config for Babel, ESLint, etc.? In dedicated config files

cd qualtrics-response-exporter-ui
vue add electron-builder

// upgrade all development dependencies to the latest version
ncu -u
npm install --force
// audit for production only
npm audit --only=prod

// rollback eslint and its related package to previous version to prevent errors
npm install --save-dev eslint@7 @typescript-eslint/eslint-plugin@4 @typescript-eslint/parser@4
// upgrade to the latest version
npm install --save vue@next vue-router@4 vuex@4
// vuex persistedstate
npm install --save vuex-persistedstate
// tailwind with PostCSS 7 (vue-cli v4 doesn't support PostCSS 8, yet)
npm install --save-dev tailwindcss@npm:@tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9
// create tailwind.config.js and postcss.config.js
npx tailwindcss init -p
// install Tailwind UI dependencies 
npm install --save @tailwindcss/forms @tailwindcss/typography @tailwindcss/aspect-ratio
npm install --save @headlessui/vue @heroicons/vue
// install vue utilities (especially for debounce)
npm install --save @vueuse/core
// install fuse.js for fuzzy search capability
npm install --save fuse.js

// axios and rate limiter
npm install --save axios limiter
// queue, thread, lock
npm install --save denque threads async-lock
// web server (http & websocket), available port
npm install --save fastify fastify-websocket get-port@5.1.1
npm install --save-dev @types/ws
// system information and cryptography library
npm install --save systeminformation crypto-js


